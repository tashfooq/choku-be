generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model chapters {
  name       String?
  textbookId Int?         @map("textbook_id")
  id         Int          @id @default(autoincrement())
  textbooks  textbooks?   @relation(fields: [textbookId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "textbook_id_fk")
  subchapter subchapter[]
}

model progress {
  id                  Int   @id(map: "progress_test_pkey") @default(autoincrement())
  userId              Int   @unique(map: "progress_test_user_id_key") @map("user_id")
  subchapterProgress  Json? @map("subchapter_progress") @db.Json
  selectedTextbookIds Int[] @map("selected_textbook_ids")
  subtopicProgress    Json? @map("subtopic_progress") @db.Json
  users               users @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_id_fk")
}

model subchapter {
  name      String?
  id        Int         @id @default(autoincrement())
  chapterId Int?        @map("chapter_id")
  chapters  chapters?   @relation(fields: [chapterId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "chapter_id_fk")
  subtopics subtopics[]
}

model subtopics {
  id           Int        @id @default(autoincrement())
  name         String
  subchapterId Int        @map("subchapter_id")
  subchapter   subchapter @relation(fields: [subchapterId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "subchapter_id_fk")
}

model textbooks {
  id       Int        @id @default(autoincrement())
  name     String?
  author   String?
  edition  Int?
  chapters chapters[]
}

model users {
  id        Int       @id @default(autoincrement())
  firstName String?   @map("first_name")
  lastName  String?   @map("last_name")
  email     String?   @db.VarChar
  password  String?   @db.VarChar
  createdOn DateTime? @map("created_on") @db.Date
  progress  progress?
}
